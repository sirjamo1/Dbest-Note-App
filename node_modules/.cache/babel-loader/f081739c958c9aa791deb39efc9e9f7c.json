{"ast":null,"code":"var _jsxFileName = \"/home/sirjamo/repos/React-Bootcamp/React-Note-App/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Sidebar from \"./components/Sidebar\";\nimport Editor from \"./components/Editor\";\nimport { data } from \"./data\";\nimport Split from \"react-split\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  /**\n   * Challenge: Try to figure out a way to display only the\n   * first line of note.body as the note summary in the\n   * sidebar.\n   *\n   * Hint 1: note.body has \"invisible\" newline characters\n   * in the text every time there's a new line shown. E.g.\n   * the text in Note 1 is:\n   * \"# Note summary\\n\\nBeginning of the note\"\n   *\n   * Hint 2: See if you can split the string into an array\n   * using the \"\\n\" newline character as the divider\n   */\n  const [notes, setNotes] = React.useState(() => JSON.parse(localStorage.getItem(\"notes\")) || []);\n  const [currentNoteId, setCurrentNoteId] = React.useState(notes[0] && notes[0].id || \"\");\n  React.useEffect(() => {\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n    console.log(notes[0].body.JSON);\n  }, [notes]);\n\n  function createNewNote() {\n    const newNote = {\n      id: nanoid(),\n      body: \"# Type your markdown note's title here\"\n    };\n    setNotes(prevNotes => [newNote, ...prevNotes]);\n    setCurrentNoteId(newNote.id);\n  }\n\n  function updateNote(text) {\n    setNotes(oldNotes => oldNotes.map(oldNote => {\n      return oldNote.id === currentNoteId ? { ...oldNote,\n        body: text\n      } : oldNote;\n    }));\n  }\n\n  function findCurrentNote() {\n    return notes.find(note => {\n      return note.id === currentNoteId;\n    }) || notes[0];\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: notes.length > 0 ? /*#__PURE__*/_jsxDEV(Split, {\n      sizes: [30, 70],\n      direction: \"horizontal\",\n      className: \"split\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        notes: notes,\n        currentNote: findCurrentNote(),\n        setCurrentNoteId: setCurrentNoteId,\n        newNote: createNewNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), currentNoteId && notes.length > 0 && /*#__PURE__*/_jsxDEV(Editor, {\n        currentNote: findCurrentNote(),\n        updateNote: updateNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-notes\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"You have no notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"first-note\",\n        onClick: createNewNote,\n        children: \"Create one now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"h9rVnagE36yNkFkROwCMD8XJBck=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Sidebar","Editor","data","Split","nanoid","App","notes","setNotes","useState","JSON","parse","localStorage","getItem","currentNoteId","setCurrentNoteId","id","useEffect","setItem","stringify","console","log","body","createNewNote","newNote","prevNotes","updateNote","text","oldNotes","map","oldNote","findCurrentNote","find","note","length"],"sources":["/home/sirjamo/repos/React-Bootcamp/React-Note-App/src/App.js"],"sourcesContent":["import React from \"react\";\nimport Sidebar from \"./components/Sidebar\";\nimport Editor from \"./components/Editor\";\nimport { data } from \"./data\";\nimport Split from \"react-split\";\nimport { nanoid } from \"nanoid\";\n\nexport default function App() {\n  /**\n   * Challenge: Try to figure out a way to display only the\n   * first line of note.body as the note summary in the\n   * sidebar.\n   *\n   * Hint 1: note.body has \"invisible\" newline characters\n   * in the text every time there's a new line shown. E.g.\n   * the text in Note 1 is:\n   * \"# Note summary\\n\\nBeginning of the note\"\n   *\n   * Hint 2: See if you can split the string into an array\n   * using the \"\\n\" newline character as the divider\n   */\n\n  const [notes, setNotes] = React.useState(\n    () => JSON.parse(localStorage.getItem(\"notes\")) || []\n  );\n  const [currentNoteId, setCurrentNoteId] = React.useState(\n    (notes[0] && notes[0].id) || \"\"\n  );\n  React.useEffect(() => {\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n       console.log(notes[0].body.JSON);\n  }, [notes]);\n  function createNewNote() {\n    const newNote = {\n      id: nanoid(),\n      body: \"# Type your markdown note's title here\",\n    };\n \n    setNotes((prevNotes) => [newNote, ...prevNotes]);\n    setCurrentNoteId(newNote.id);\n  }\n\n  function updateNote(text) {\n    setNotes((oldNotes) =>\n      oldNotes.map((oldNote) => {\n        return oldNote.id === currentNoteId\n          ? { ...oldNote, body: text }\n          : oldNote;\n      })\n    );\n  }\n\n  function findCurrentNote() {\n    return (\n      notes.find((note) => {\n        return note.id === currentNoteId;\n      }) || notes[0]\n    );\n  }\n\n  return (\n    <main>\n      {notes.length > 0 ? (\n        <Split sizes={[30, 70]} direction=\"horizontal\" className=\"split\">\n          <Sidebar\n            notes={notes}\n            currentNote={findCurrentNote()}\n            setCurrentNoteId={setCurrentNoteId}\n            newNote={createNewNote}\n          />\n          {currentNoteId && notes.length > 0 && (\n            <Editor currentNote={findCurrentNote()} updateNote={updateNote} />\n          )}\n        </Split>\n      ) : (\n        <div className=\"no-notes\">\n          <h1>You have no notes</h1>\n          <button className=\"first-note\" onClick={createNewNote}>\n            Create one now\n          </button>\n        </div>\n      )}\n    </main>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}