[{"/home/sirjamo/repos/React-Bootcamp/React-Meme-Generator/src/index.js":"1","/home/sirjamo/repos/React-Bootcamp/React-Meme-Generator/src/App.js":"2","/home/sirjamo/repos/React-Bootcamp/React-Meme-Generator/src/reportWebVitals.js":"3","/home/sirjamo/repos/React-Bootcamp/React-Meme-Generator/src/components/Header.js":"4","/home/sirjamo/repos/React-Bootcamp/React-Counter/src/index.js":"5","/home/sirjamo/repos/React-Bootcamp/React-Counter/src/App.js":"6","/home/sirjamo/repos/React-Bootcamp/React-Counter/src/reportWebVitals.js":"7","/home/sirjamo/repos/React-Bootcamp/React-Counter/src/components/Header.js":"8","/home/sirjamo/repos/React-Bootcamp/React-Note-App/src/index.js":"9","/home/sirjamo/repos/React-Bootcamp/React-Note-App/src/App.js":"10","/home/sirjamo/repos/React-Bootcamp/React-Note-App/src/reportWebVitals.js":"11","/home/sirjamo/repos/React-Bootcamp/React-Note-App/src/components/Editor.js":"12","/home/sirjamo/repos/React-Bootcamp/React-Note-App/src/data.js":"13","/home/sirjamo/repos/React-Bootcamp/React-Note-App/src/components/Sidebar.js":"14","/home/sirjamo/repos/React-Bootcamp/Dbest-Note-App/src/index.js":"15","/home/sirjamo/repos/React-Bootcamp/Dbest-Note-App/src/App.js":"16","/home/sirjamo/repos/React-Bootcamp/Dbest-Note-App/src/reportWebVitals.js":"17","/home/sirjamo/repos/React-Bootcamp/Dbest-Note-App/src/data.js":"18","/home/sirjamo/repos/React-Bootcamp/Dbest-Note-App/src/components/NoMatch.js":"19","/home/sirjamo/repos/React-Bootcamp/Dbest-Note-App/src/components/Notes/Sidebar.js":"20","/home/sirjamo/repos/React-Bootcamp/Dbest-Note-App/src/components/Notes/Editor.js":"21","/home/sirjamo/repos/React-Bootcamp/Dbest-Note-App/src/components/Notes/Notes.js":"22","/home/sirjamo/repos/React-Bootcamp/Dbest-Note-App/src/components/Contact/Contact.js":"23","/home/sirjamo/repos/React-Bootcamp/Dbest-Note-App/src/components/Home/Home.js":"24","/home/sirjamo/repos/React-Bootcamp/Dbest-Note-App/src/components/NavBar/Navbar.js":"25","/home/sirjamo/repos/React-Bootcamp/Dbest-Note-App/src/firebase-config.js":"26","/home/sirjamo/repos/React-Bootcamp/Dbest-Note-App/src/components/SignUp/SignUp.js":"27","/home/sirjamo/repos/React-Bootcamp/Dbest-Note-App/src/components/Profile/Profile.js":"28","/home/sirjamo/repos/React-Bootcamp/Dbest-Note-App/src/components/LogIn/LogIn.js":"29","/home/sirjamo/repos/React-Bootcamp/Dbest-Note-App/src/components/auth.js":"30","/home/sirjamo/repos/React-Bootcamp/Dbest-Note-App/src/Users/Users.js":"31","/home/sirjamo/repos/React-Bootcamp/Dbest-Note-App/src/Users/UserDetails.js":"32","/home/sirjamo/repos/React-Bootcamp/Dbest-Note-App/src/components/Admin.js":"33","/home/sirjamo/repos/React-Bootcamp/Dbest-Note-App/src/components/RequireAuth.js":"34"},{"size":535,"mtime":1655424634926,"results":"35","hashOfConfig":"36"},{"size":167,"mtime":1655444475406,"results":"37","hashOfConfig":"36"},{"size":362,"mtime":1655340356607,"results":"38","hashOfConfig":"36"},{"size":154,"mtime":1655444476434,"results":"39","hashOfConfig":"36"},{"size":535,"mtime":1655424634926,"results":"40","hashOfConfig":"41"},{"size":194,"mtime":1655592771347,"results":"42","hashOfConfig":"41"},{"size":362,"mtime":1655340356607,"results":"43","hashOfConfig":"41"},{"size":153,"mtime":1655592786213,"results":"44","hashOfConfig":"41"},{"size":513,"mtime":1656043754208,"results":"45","hashOfConfig":"46"},{"size":2426,"mtime":1656103948853,"results":"47","hashOfConfig":"46"},{"size":362,"mtime":1656043754208,"results":"48","hashOfConfig":"46"},{"size":766,"mtime":1656043754208,"results":"49","hashOfConfig":"46"},{"size":392,"mtime":1656043754208,"results":"50","hashOfConfig":"46"},{"size":885,"mtime":1656103932104,"results":"51","hashOfConfig":"46"},{"size":610,"mtime":1657153393428,"results":"52","hashOfConfig":"53"},{"size":2152,"mtime":1657176680185,"results":"54","hashOfConfig":"53"},{"size":362,"mtime":1656485343550,"results":"55","hashOfConfig":"53"},{"size":392,"mtime":1656485343550,"results":"56","hashOfConfig":"53"},{"size":98,"mtime":1656545534409,"results":"57","hashOfConfig":"53"},{"size":2274,"mtime":1657142729216,"results":"58","hashOfConfig":"53"},{"size":1509,"mtime":1657151036014,"results":"59","hashOfConfig":"53"},{"size":5230,"mtime":1657151235716,"results":"60","hashOfConfig":"53"},{"size":3077,"mtime":1656998854880,"results":"61","hashOfConfig":"53"},{"size":268,"mtime":1656981904248,"results":"62","hashOfConfig":"53"},{"size":1564,"mtime":1657176098254,"results":"63","hashOfConfig":"53"},{"size":620,"mtime":1657164292001,"results":"64","hashOfConfig":"53"},{"size":7374,"mtime":1657176286003,"results":"65","hashOfConfig":"53"},{"size":551,"mtime":1657176168662,"results":"66","hashOfConfig":"53"},{"size":2507,"mtime":1657174937254,"results":"67","hashOfConfig":"53"},{"size":457,"mtime":1657175794513,"results":"68","hashOfConfig":"53"},{"size":657,"mtime":1656996694067,"results":"69","hashOfConfig":"53"},{"size":227,"mtime":1656981904244,"results":"70","hashOfConfig":"53"},{"size":99,"mtime":1656981904248,"results":"71","hashOfConfig":"53"},{"size":382,"mtime":1657176750909,"results":"72","hashOfConfig":"53"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"a5cbg2",{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"prfesn",{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"1bn00ig",{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},"5utsf6",{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"119"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"119"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"160"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/sirjamo/repos/React-Bootcamp/React-Meme-Generator/src/index.js",[],[],"/home/sirjamo/repos/React-Bootcamp/React-Meme-Generator/src/App.js",[],[],"/home/sirjamo/repos/React-Bootcamp/React-Meme-Generator/src/reportWebVitals.js",[],[],"/home/sirjamo/repos/React-Bootcamp/React-Meme-Generator/src/components/Header.js",[],[],"/home/sirjamo/repos/React-Bootcamp/React-Counter/src/index.js",[],[],"/home/sirjamo/repos/React-Bootcamp/React-Counter/src/App.js",[],[],"/home/sirjamo/repos/React-Bootcamp/React-Counter/src/reportWebVitals.js",[],[],"/home/sirjamo/repos/React-Bootcamp/React-Counter/src/components/Header.js",[],[],"/home/sirjamo/repos/React-Bootcamp/React-Note-App/src/index.js",[],[],[],"/home/sirjamo/repos/React-Bootcamp/React-Note-App/src/App.js",["182","183"],[],"/home/sirjamo/repos/React-Bootcamp/React-Note-App/src/reportWebVitals.js",[],[],"/home/sirjamo/repos/React-Bootcamp/React-Note-App/src/components/Editor.js",[],[],"/home/sirjamo/repos/React-Bootcamp/React-Note-App/src/data.js",[],[],"/home/sirjamo/repos/React-Bootcamp/React-Note-App/src/components/Sidebar.js",[],[],"/home/sirjamo/repos/React-Bootcamp/Dbest-Note-App/src/index.js",[],[],[],"/home/sirjamo/repos/React-Bootcamp/Dbest-Note-App/src/App.js",["184"],[],"/home/sirjamo/repos/React-Bootcamp/Dbest-Note-App/src/reportWebVitals.js",[],[],"/home/sirjamo/repos/React-Bootcamp/Dbest-Note-App/src/data.js",[],[],[],"/home/sirjamo/repos/React-Bootcamp/Dbest-Note-App/src/components/NoMatch.js",[],[],"/home/sirjamo/repos/React-Bootcamp/Dbest-Note-App/src/components/Notes/Sidebar.js",[],[],"/home/sirjamo/repos/React-Bootcamp/Dbest-Note-App/src/components/Notes/Editor.js",[],[],"/home/sirjamo/repos/React-Bootcamp/Dbest-Note-App/src/components/Notes/Notes.js",["185"],[],"import Sidebar from \"./Sidebar\";\nimport Editor from \"./Editor\";\nimport { nanoid } from \"nanoid\";\nimport \"./NoteFolderStyles.css\";\nimport { useState, useEffect, React } from \"react\";\nimport { db } from \"../../firebase-config\";\nimport {\n    collection,\n    getDocs,\n    addDoc,\n    updateDoc,\n    doc,\n    deleteDoc,\n} from \"firebase/firestore\";\n\nexport function Notes() {\n \n    const [notes, setNotes] = useState([]);\n    const notesCollectionRef = collection(db, \"notes\");\n    useEffect(() => {\n        const getNotesData = async () => {\n            const data = await getDocs(notesCollectionRef);\n            setNotes(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\n        };\n        getNotesData();\n    }, []);\n\n    const createNewNoteData = async () => {\n        await addDoc(notesCollectionRef, {\n            id: nanoid(),\n            title: `Type your title here`,\n            description: \"No content\",\n            // text: text,\n            date: today.toLocaleString(\"en-US\"),\n            update: \"\",\n        });\n        const getNotesData = async () => {\n            const data = await getDocs(notesCollectionRef);\n            setNotes(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\n        };\n        getNotesData();\n        // setNotes((prevNotes) => [currentN, ...prevNotes]);\n        //  setCurrentNoteId(newNote.id);\n    };\n    const deleteNote = async (event, id, noteId) => {\n        // event.stopPropagation();\n        const noteDoc = doc(db, \"notes\", id);\n        await deleteDoc(noteDoc);\n        const getNotesData = async () => {\n            const data = await getDocs(notesCollectionRef);\n            setNotes(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\n        };\n        getNotesData();\n    };\n\n    const [currentNoteId, setCurrentNoteId] = useState(\n        (notes[0] && notes[0].id) || \"\"\n    );\n    let today = new Date();\n    function updateNote(text) {\n        setNotes((oldNotes) => {\n            const newOldNotes = [];\n            for (let i = 0; i < oldNotes.length; i++) {\n                if (oldNotes[i].id === currentNoteId) {\n                    newOldNotes.unshift({\n                        ...oldNotes[i],\n                        title: text,\n                        // text: text, //not sure about this\n                        description: text,\n                        update: today.toLocaleString(\"en-US\"),\n                    });\n                } else {\n                    newOldNotes.push(oldNotes[i]);\n                }\n            }\n            return newOldNotes;\n        });\n    }\n    //NOTE: this doesn't work\n\n    const saveNotes = async (id, text) => {\n        const noteDoc = doc(db, \"notes\", id);\n        await updateDoc(noteDoc, notes);\n        console.log(noteDoc);\n    };\n    console.log({ notes });\n    function findCurrentNote() {\n        return (\n            notes.find((note) => {\n                return note.id === currentNoteId;\n            }) || notes[0]\n        );\n    }\n    const [pencilArrow, setPencilArrow] = useState(true);\n    function changePencilArrow() {\n        setPencilArrow(!pencilArrow);\n    }\n\n    return (\n        <div>\n            {notes.length > 0 ? (\n                <div className=\"sidebar-editor--container\">\n                    {pencilArrow ? (\n                        <Sidebar\n                            notes={notes}\n                            currentNote={findCurrentNote()}\n                            setCurrentNoteId={setCurrentNoteId}\n                            newNote={createNewNoteData}\n                            deleteNote={deleteNote}\n                            saveNotes={saveNotes}\n                        />\n                    ) : (\n                        <></>\n                    )}\n\n                    <Editor\n                        currentNote={findCurrentNote()}\n                        updateNote={updateNote}\n                        changePencilArrow={changePencilArrow}\n                        pencilArrow={pencilArrow}\n                    />\n                </div>\n            ) : (\n                <div className=\"create-note-container\">\n                    <h1>You have no notes</h1>\n                    <div\n                        className=\"create-note-post-it-card\"\n                        onClick={createNewNoteData}\n                    >\n                        Create one now\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n//\n//\n//<<<<<<<<<<<<<<<OLD CODE>>>>>>>>>>>>>>>>>>>>\n//\n//\n//    // useEffect(() => {\n//   localStorage.setItem(\"notes\", JSON.stringify(notesData));\n//   // console.log({localStorage})\n// }, [notes]);\n\n// function createNewNote() {\n//   createNewNoteData()\n//   const newNote = {\n//     id: nanoid(),\n//     title: `Type your title here`,\n//     description: \"No content\",\n//     date: today.toLocaleString(\"en-US\"),\n//     update: \"\",\n//   };\n\n//   setNotes((prevNotes) => [newNote, ...prevNotes]);\n//   setCurrentNoteId(newNote.id);\n// }\n// function deleteNote(event, noteId) {\n//   event.stopPropagation();\n//   setNotes((oldNotes) => oldNotes.filter((note) => note.id !== noteId));\n// }\n// const [notes, setNotes] = useState(\n//   () => JSON.parse(localStorage.getItem(\"notesData\")) || []\n// );\n","/home/sirjamo/repos/React-Bootcamp/Dbest-Note-App/src/components/Contact/Contact.js",["186","187","188","189","190"],[],"import React, { useEffect, useState } from \"react\";\nimport \"./Contact.css\";\nimport { db } from \"../../firebase-config\";\nimport {\n  collection,\n  getDocs,\n  addDoc,\n  updateDoc,\n  doc,\n  deleteDoc,\n} from \"firebase/firestore\";\n//\n//NOTE: ***********Form sends data even when fields are not met*******\n//\nexport function Contact() {\n  const [contact, setContact] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newEmail, setNewEmail] = useState(\"\");\n  const [newTitle, setNewTitle] = useState(\"\");\n  const [newMessage, setNewMessage] = useState(\"\");\n  const contactCollectionRef = collection(db, \"contact\");\n  const createMessage = async () => {\n    await addDoc(contactCollectionRef, {\n      name: newName,\n      email: newEmail,\n      title: newTitle,\n      message: newMessage,\n    });\n  };\n  useEffect(() => {\n    const getContact = async () => {\n      const data = await getDocs(contactCollectionRef);\n      setContact(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\n      \n    };\n    getContact();\n  }, []);\n  return (\n    <div className=\"contact--container\">\n      <h1>Contact Us</h1>\n      <div className=\"contact-post-it\">\n        <label>\n          Full name<span className=\"asterisk\">*</span>\n          <span className=\"instructions\">\n            (Must only contain characters a - Z)\n          </span>\n        </label>\n        <input\n          onChange={(event) => {\n            setNewName(event.target.value);\n          }}\n          type=\"text\"\n          placeholder=\"Name\"\n          pattern=\"^([a-zA-Z]{2,}\\s[a-zA-Z]{1,}'?-?[a-zA-Z]{2,}\\s?([a-zA-Z]{1,})?)\"\n          required\n        ></input>\n        <label>\n          Email<span className=\"asterisk\">*</span>\n          <span className=\"instructions\">(Must be a valid e-mail address)</span>\n        </label>\n        <input\n          onChange={(event) => {\n            setNewEmail(event.target.value);\n          }}\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n        ></input>\n        <label>\n          Title<span className=\"asterisk\">*</span>\n        </label>\n        <input\n          onChange={(event) => {\n            setNewTitle(event.target.value);\n          }}\n          type=\"text\"\n          placeholder=\"Title\"\n          required\n        ></input>\n        <label>\n          Your Message<span className=\"asterisk\">*</span>\n        </label>\n        <textarea\n          onChange={(event) => {\n            setNewMessage(event.target.value);\n          }}\n          placeholder=\"Type your message here...\"\n          required\n          rows={7}\n          cols={5}\n          maxLength={50}\n        />\n\n        <button\n          onClick={createMessage}\n          className=\"contact--submit\"\n          \n        >\n          Send\n        </button>\n      </div>\n      {/* {contact.map((con) => {\n          return (\n            <div>\n              <p>Name: {con.name}</p>\n              <p>email: {con.email}</p>\n              <p>title: {con.title}</p>\n              <p>message: {con.message}</p>\n            </div>\n          );\n        })} */}\n    </div>\n  );\n}\n","/home/sirjamo/repos/React-Bootcamp/Dbest-Note-App/src/components/Home/Home.js",[],[],"/home/sirjamo/repos/React-Bootcamp/Dbest-Note-App/src/components/NavBar/Navbar.js",["191"],[],"/home/sirjamo/repos/React-Bootcamp/Dbest-Note-App/src/firebase-config.js",[],[],"/home/sirjamo/repos/React-Bootcamp/Dbest-Note-App/src/components/SignUp/SignUp.js",["192","193","194","195","196","197","198","199","200"],[],"import { React, useState, useEffect } from \"react\";\nimport \"./SignUp.css\";\nimport { db } from \"../../firebase-config\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport {\n    createUserWithEmailAndPassword,\n    onAuthStateChanged,\n    signOut,\n    signInWithEmailAndPassword,\n} from \"firebase/auth\";\nimport { auth } from \"../../firebase-config\";\n import {useAuth} from \"../auth\"\nimport {\n    collection,\n    getDocs,\n    addDoc,\n    updateDoc,\n    doc,\n    deleteDoc,\n} from \"firebase/firestore\";\n\n//Need to change when user sign up they are taken back to login page\n//\nexport function SignUp() {\n    //<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<NEW CODE\n    const [registerEmail, setRegisterEmail] = useState(\"\");\n    const [registerPassword, setRegisterPassword] = useState(\"\");\n    const [loginEmail, setLoginEmail] = useState(\"\");\n    const [loginPassword, setLoginPassword] = useState(\"\");\n    const [user, setUser] = useState({});\n    const [userLog, setUserLog] = useState(\"\")\n    \n     const authLog = useAuth();                 // from login\n    const navigate = useNavigate();         //from login\n    const location = useLocation();        //from login\n    onAuthStateChanged(auth, (currentUser) => {\n        setUser(currentUser);\n    });\n\n    const register = async () => {\n        try {\n            const user = await createUserWithEmailAndPassword(\n                auth,\n                registerEmail,\n                registerPassword\n            );\n            console.log(user);\n        } catch (error) {\n            console.log(error.message);\n        }\n    };\n    const login = async () => {\n        try {\n            const user = await signInWithEmailAndPassword(\n                auth,\n                loginEmail,\n                loginPassword\n            );\n             authLog.login(userLog);                           //from login\n            navigate(redirectPath, { replace: true }); //from login\n            console.log(user);\n        } catch (error) {\n            console.log(error.message);\n        }\n    };\n    const logout = async () => {\n        await signOut(auth);\n        authLog.logout(); \n        navigate(\"/\")\n        \n    };\n\n     const redirectPath = location.state?.path || \"/\"; //from login\n    return (\n        <div className=\"signup--container\">\n            <h1>Sign Up</h1>\n            <div className=\"signup-post-it\">\n                <label>\n                    Email<span className=\"asterisk\">*</span>\n                    <span className=\"instructions\">\n                        (Must be a valid e-mail address)\n                    </span>\n                </label>\n                <input\n                    onChange={(event) => {\n                        setLoginEmail(event.target.value);\n                    }}\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    required\n                ></input>\n                <label>\n                    Password<span className=\"asterisk\">*</span>\n                    <span className=\"instructions\">\n                        (Minimum eight characters, at least one letter and one\n                        number)\n                    </span>\n                </label>\n                <input\n                    onChange={(event) => {\n                        setLoginPassword(event.target.value);\n                    }}\n                    type=\"password\"\n                    placeholder=\"password\"\n                    pattern=\"^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$\"\n                    required\n                ></input>\n                <button\n                    onClick={login}\n                    className=\"signup--submit\"\n                    type=\"submit\"\n                >\n                    Login\n                </button>\n                <label>\n                    Email<span className=\"asterisk\">*</span>\n                    <span className=\"instructions\">\n                        (Must be a valid e-mail address)\n                    </span>\n                </label>\n                <input\n                    onChange={(event) => {\n                        setRegisterEmail(event.target.value);\n                    }}\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    required\n                ></input>\n                <label>\n                    Password<span className=\"asterisk\">*</span>\n                    <span className=\"instructions\">\n                        (Minimum eight characters, at least one letter and one\n                        number)\n                    </span>\n                </label>\n                <input\n                    onChange={(event) => {\n                        setRegisterPassword(event.target.value);\n                    }}\n                    type=\"password\"\n                    placeholder=\"password\"\n                    pattern=\"^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$\"\n                    required\n                ></input>\n\n                <button\n                    onClick={register}\n                    className=\"signup--submit\"\n                    type=\"submit\"\n                >\n                    Sign Up\n                </button>\n                <h4>User Logged In:</h4>\n                {user?.email}\n                {/* {auth.currentUser.email} */}\n                <button\n                    onClick={logout}\n                    className=\"signup--submit\"\n                    type=\"submit\"\n                >\n                    Sign out\n                </button>\n            </div>\n        </div>\n    );\n}\n\n//,<<<<<<<<<<<<<OLD CODE>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n//\n//    //\n// const [newName, setNewName] = useState(\"\");\n// const [newEmail, setNewEmail] = useState(\"\");\n// const [newPassword, setNewPassword] = useState(\"\");\n// const [newBio, setNewBio] = useState(\"\");\n// const usersCollectionRef = collection(db, \"users\");\n// const createUser = async () => {\n//     await addDoc(usersCollectionRef, {\n//         name: newName,\n//     placeholder=\"Name\"\n//     pattern=\"^([a-zA-Z]{2,}\\s[a-zA-Z]{1,}'?-?[a-zA-Z]{2,}\\s?([a-zA-Z]{1,})?)\"\n//     required\n// ></input> */\n//                 }\n// useEffect(() => {\n//     const getUsers = async () => {\n//         const data = await getDocs(usersCollectionRef);\n//         setUsers(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\n//         // console.log(getUsers);\n//     };\n//     getUsers();\n// }, []);\n\n//         email: newEmail,\n//         password: newPassword,\n//         bio: newBio,\n//     });\n// };\n//             {\n//                 /* {users.map((user) => {\n//     return (\n//       <div>\n//         <p>Name: {user.name}</p>\n//         <p>email: {user.email}</p>\n//         <p>Bio: {user.bio}</p>\n//       </div>\n//     );\n//   })} */\n//             }\n\n//     {\n//         /* <label>A little about yourself</label>\n// <textarea\n//     onChange={(event) => {\n//         setNewBio(event.target.value);\n//     }}\n//     placeholder=\"A little about yourself\"\n//     rows={7}\n//     cols={5}\n//     maxLength={50}\n// /> */\n//     }\n//                 {\n//                     /* <label>\n//     Full Name<span className=\"asterisk\">*</span>\n//     <span className=\"instructions\">\n//         (Must only contain characters a - Z)\n//     </span>\n// </label>\n// <input\n//     onChange={(event) => {\n//         setNewName(event.target.value);\n//     }}\n//     type=\"text\"",[],"/home/sirjamo/repos/React-Bootcamp/Dbest-Note-App/src/components/Profile/Profile.js",["201"],[],"/home/sirjamo/repos/React-Bootcamp/Dbest-Note-App/src/components/LogIn/LogIn.js",["202","203","204","205","206"],[],"/home/sirjamo/repos/React-Bootcamp/Dbest-Note-App/src/components/auth.js",[],[],"/home/sirjamo/repos/React-Bootcamp/Dbest-Note-App/src/Users/Users.js",[],[],"/home/sirjamo/repos/React-Bootcamp/Dbest-Note-App/src/Users/UserDetails.js",[],[],"/home/sirjamo/repos/React-Bootcamp/Dbest-Note-App/src/components/Admin.js",[],[],"/home/sirjamo/repos/React-Bootcamp/Dbest-Note-App/src/components/RequireAuth.js",[],[],{"ruleId":"207","severity":1,"message":"208","line":4,"column":10,"nodeType":"209","messageId":"210","endLine":4,"endColumn":14},{"ruleId":"211","severity":1,"message":"212","line":34,"column":28,"nodeType":"213","messageId":"214","endLine":34,"endColumn":30},{"ruleId":"207","severity":1,"message":"215","line":10,"column":10,"nodeType":"209","messageId":"210","endLine":10,"endColumn":15},{"ruleId":"216","severity":1,"message":"217","line":26,"column":8,"nodeType":"218","endLine":26,"endColumn":10,"suggestions":"219"},{"ruleId":"207","severity":1,"message":"220","line":8,"column":3,"nodeType":"209","messageId":"210","endLine":8,"endColumn":12},{"ruleId":"207","severity":1,"message":"221","line":9,"column":3,"nodeType":"209","messageId":"210","endLine":9,"endColumn":6},{"ruleId":"207","severity":1,"message":"222","line":10,"column":3,"nodeType":"209","messageId":"210","endLine":10,"endColumn":12},{"ruleId":"207","severity":1,"message":"223","line":16,"column":10,"nodeType":"209","messageId":"210","endLine":16,"endColumn":17},{"ruleId":"216","severity":1,"message":"224","line":37,"column":6,"nodeType":"218","endLine":37,"endColumn":8,"suggestions":"225"},{"ruleId":"226","severity":2,"message":"227","line":12,"column":5,"nodeType":"209","messageId":"228","endLine":12,"endColumn":9},{"ruleId":"207","severity":1,"message":"229","line":1,"column":27,"nodeType":"209","messageId":"210","endLine":1,"endColumn":36},{"ruleId":"207","severity":1,"message":"230","line":3,"column":10,"nodeType":"209","messageId":"210","endLine":3,"endColumn":12},{"ruleId":"207","severity":1,"message":"231","line":14,"column":5,"nodeType":"209","messageId":"210","endLine":14,"endColumn":15},{"ruleId":"207","severity":1,"message":"232","line":15,"column":5,"nodeType":"209","messageId":"210","endLine":15,"endColumn":12},{"ruleId":"207","severity":1,"message":"233","line":16,"column":5,"nodeType":"209","messageId":"210","endLine":16,"endColumn":11},{"ruleId":"207","severity":1,"message":"220","line":17,"column":5,"nodeType":"209","messageId":"210","endLine":17,"endColumn":14},{"ruleId":"207","severity":1,"message":"221","line":18,"column":5,"nodeType":"209","messageId":"210","endLine":18,"endColumn":8},{"ruleId":"207","severity":1,"message":"222","line":19,"column":5,"nodeType":"209","messageId":"210","endLine":19,"endColumn":14},{"ruleId":"207","severity":1,"message":"234","line":31,"column":21,"nodeType":"209","messageId":"210","endLine":31,"endColumn":31},{"ruleId":"226","severity":2,"message":"227","line":17,"column":20,"nodeType":"209","messageId":"228","endLine":17,"endColumn":24},{"ruleId":"207","severity":1,"message":"233","line":8,"column":5,"nodeType":"209","messageId":"210","endLine":8,"endColumn":11},{"ruleId":"207","severity":1,"message":"220","line":9,"column":5,"nodeType":"209","messageId":"210","endLine":9,"endColumn":14},{"ruleId":"207","severity":1,"message":"221","line":10,"column":5,"nodeType":"209","messageId":"210","endLine":10,"endColumn":8},{"ruleId":"207","severity":1,"message":"222","line":11,"column":5,"nodeType":"209","messageId":"210","endLine":11,"endColumn":14},{"ruleId":"216","severity":1,"message":"235","line":35,"column":8,"nodeType":"218","endLine":35,"endColumn":14,"suggestions":"236"},"no-unused-vars","'data' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'LogIn' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'notesCollectionRef'. Either include it or remove the dependency array.","ArrayExpression",["237"],"'updateDoc' is defined but never used.","'doc' is defined but never used.","'deleteDoc' is defined but never used.","'contact' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'contactCollectionRef'. Either include it or remove the dependency array.",["238"],"no-undef","'auth' is not defined.","undef","'useEffect' is defined but never used.","'db' is defined but never used.","'collection' is defined but never used.","'getDocs' is defined but never used.","'addDoc' is defined but never used.","'setUserLog' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'usersCollectionRef'. Either include it or remove the dependency array.",["239"],{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},"Update the dependencies array to be: [notesCollectionRef]",{"range":"246","text":"247"},"Update the dependencies array to be: [contactCollectionRef]",{"range":"248","text":"249"},"Update the dependencies array to be: [user, usersCollectionRef]",{"range":"250","text":"251"},[719,721],"[notesCollectionRef]",[1040,1042],"[contactCollectionRef]",[1006,1012],"[user, usersCollectionRef]"]